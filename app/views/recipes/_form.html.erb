<% 
#dependent on ruby variable integer 'create'.
#  if create == 1, we are on new page
#  else if create == 0, we are on edit page
%>
<style>
div#steps_list {
  counter-reset: rows;
}
div#steps_list > div.listed_text_item:before{
  counter-increment: rows;
  content: counter(rows);
}
</style>
<script>

function post(node){
  var hiddenIngreds = document.createElement("input");
  hiddenIngreds.setAttribute("type", "hidden");
  hiddenIngreds.setAttribute("id", "recipe_j_ingreds");
  hiddenIngreds.setAttribute("name", "recipe[j_ingreds]");
  //store ingred_list text_element values into a json array
  var ingreds_array = '[';
  var recipe_ingreds = document.getElementById("ingred_list");
  var ingreds = recipe_ingreds.getElementsByClassName("text_element");
  for(var i = 0; i < ingreds.length - 1; i++){
    if (ingreds[i].value.search(/[A-Za-z]/)!= -1)
    ingreds_array +=  "\""+ingreds[i].value.replace(/\n/g,'U+2424').replace(/\"/g,"U+022") + "\",";
    
  }

  if (ingreds[ingreds.length - 1].innerHTML.search(/[A-Za-z]/) != -1){
    ingreds_array += ingreds[ingreds.length - 1] + "]";
  } else {
    if (ingreds_array.slice(-1) != '[')
      ingreds_array = "\""+ingreds_array.slice(0, -1) + ']';
  }
  hiddenIngreds.setAttribute("value", ingreds_array);
  hiddenIngreds.value = hiddenIngreds.value.slice(1); /*for the extra that is inserted when assigning value */
  node.appendChild(hiddenIngreds);
  
  var hiddenSteps = document.createElement("input");
  hiddenSteps.setAttribute("type", "hidden");
  hiddenSteps.setAttribute("id", "recipe_j_steps");
  hiddenSteps.setAttribute("name", "recipe[j_steps]");
  node.appendChild(hiddenSteps);
  var steps_array = '[';
  var recipe_steps = document.getElementById("steps_list");
  var steps = recipe_steps.getElementsByClassName("text_element");
  for(var i = 0; i < steps.length - 1; i++){
    if (steps[i].value.search(/[A-Za-z]/) != -1)
      steps_array += "\""+steps[i].value.replace(/[\n]/g,"U+2424").replace(/\"/g,"U+022") + "\",";
  }
  if (steps[steps.length - 1].innerHTML.search(/[A-Za-z]/) != -1){
    steps_array += steps[steps.length - 1] + "]";
  } else {
    if (steps_array.slice(-1) != '[')
    steps_array = "\""+steps_array.slice(0, -1) + ']';
  }
  hiddenSteps.setAttribute("value", steps_array);
  hiddenSteps.value = hiddenSteps.value.slice(1); //for the extra \" that is inserted when assigning value
  node.appendChild(hiddenSteps);

  var s_tags = "";
  var dashboard = document.getElementById("dashboard");
  //get tags
  var span_array = dashboard.getElementsByTagName("span");
  var tag_array = "{\"tags\":[";
  if (span_array.length > 0) {
    for(var i = 0; i < span_array.length - 1; i++){
      tag_array += "\""+span_array[i].innerHTML.replace(/\"/g,"") + "\","
    }
    //do last one
    tag_array += "\""+span_array[(span_array.length - 1)].innerHTML + "\"";
  }
  tag_array += "]}";
  var hiddenTags = document.createElement("input");
  hiddenTags.setAttribute("type", "hidden");
  hiddenTags.setAttribute("id", "recipe_s_tags");
  hiddenTags.setAttribute("name", "recipe[s_tags]");
  hiddenTags.setAttribute("value", tag_array);
  node.appendChild(hiddenTags);


  node.submit();

}


function removeParentOf(e, list){
  list.removeChild(e.parentNode);
  var siblings = list.getElementsByClassName('text_element');
  //give last sibling 'onkeyup' property
  siblings[siblings.length - 1].setAttribute('onkeyup', 'addBox(this, "'+list.id+'")');
  if (list.id.search("step") != -1) { 
    //redo numbering for steps
    var list_items = list.getElementsByClassName('listed_text_item');
    /*for(var i = 0; i < list_items.length; i++){
      //change numbering
      list_items[i].getElementsByClassName('round_number')[0].innerHTML = i + 1;
    }*/
  } else {};
};
function test_addRow(id, defaultText){
  if (defaultText== undefined)
    defaultText = "";
  var newChild = document.createElement('div');
  newChild.className="listed_text_item";
  var parentElement = document.getElementById(id);
  var otherChildRows = parentElement.childNodes;
  var siblingRows = parentElement.getElementsByClassName("text_element");
  var numSiblingRows = siblingRows.length;
  var newNumRows = numSiblingRows + 1;
  if (id.search("ingred") == -1) {
    //adding steps
    newChild.innerHTML = '<textarea class="text_element" placeholder="eg. Boil an egg" onkeyup="addBox(this, \''+id+'\')">'+defaultText+'</textarea><a onclick="removeParentOf(this, this.parentNode.parentNode)" class="round_button">x</a>';
  } else {
    newChild.innerHTML = '<textarea class="text_element" placeholder="eg. 2 tsp flakes" onkeyup="addBox(this, \''+id+'\')">'+defaultText+'</textarea><a onclick="removeParentOf(this, this.parentNode.parentNode)" class="round_button">x</a>';
  };
  for(var i = 0; i < numSiblingRows; i++){
    siblingRows[i].removeAttribute("onkeyup");
  };
  parentElement.appendChild(newChild); 
  return newChild;
};
function addBox(e, i, defaultText){
  if (e != undefined)
    e.removeAttribute("onkeyup"); 
  return test_addRow(i, defaultText);
};

function init_tags(tag){
  //var element = event.srcElement;
  var picked = document.getElementById("dashboard");
  var dashboard = document.getElementById("dashboard_tags");
  //add element to picked
  var newNode = document.createElement("DIV");
  newNode.id = "picked_tag";
  newNode.innerHTML = '<span>'+tag+'</span><button type="button" onclick="delete_from_picked(this)">x</button>';
  //remove element from dashboard
  picked.insertBefore(newNode, document.getElementById("holder_tags"));//appendChild(newNode);
}

function delete_from_picked(element){
  document.getElementById("dashboard").removeChild(element.parentNode);
}
</script>

<%= form_for(@recipe) do |f| %>
  <% if @recipe.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@recipe.errors.count, "error") %> prohibited this recipe from being saved:</h2>

      <ul>
      <% @recipe.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>
  <div class="position_80_top text_align_center">
    <% if @recipe.id == nil %>
      <span class="heading" style="color: #2c2c2c;">MAKING ROOM FOR A BRAND NEW RECIPE</span>
    <% else %>
      <span class="heading" style="color: #2c2c2c;">EDIT IN PROGRESS</span>
    <% end %>
  </div>
  <div class="recipe_form_field">
    <span class="heading">TITLE<span> <%= f.text_field :name, :placeholder => "TITLE", :class => "recipe_form_simple_text_field" %>
  </div>
  <div class="recipe_form_field">
    <span class="heading">DESCRIPTION</span><br>
    <%= f.text_area :about, :class => "note_book", :placeholder => "Introduce us to your creation. What inspired you? Who passed on the recipe to you? Suggestions, modifications? Add some hot sauce?" %>
  </div>
  <div class="recipe_add_photo" style="text-align: center;">
    <%= image_tag("ic_action_picture.png", :class => "recipe_test_photo") %><br>
    <%= f.file_field :main_photo, :id => "imgInput" %>
  </div>
  <div class="recipe_form_field">
    <div class="section_header">
      <span class="heading">INGREDIENTS</span>
      <span class="heading_secondary">Servings</span>
      <%= f.text_field :servings, :value => 3, :class => "recipe_form_simple_text_field width_50"%>
    </div>
  </div>
  <div class="recipe_form_field">
    <div id="ingred_list" class="sortable">
    </div>
    <a onclick='test_addRow("ingred_list")' class="add_another"><img src="/assets/ic_action_new.png"/>Add new Ingred</a>
  </div>
  <div class="recipe_form_field">
    <div class="section_header"><span class="heading">STEPS</span>
      <div class="section_header_right">
         <span class="heading_secondary">Prep Time (min)</span>
         <%= f.text_field :prep_time, :class => "recipe_form_simple_text_field width_50" %> 
         <span class="heading_secondary">Cook Time (min)</span>
         <%= f.text_field :cook_time, :value => 0, :class => "recipe_form_simple_text_field width_50" %>
      </div>
    </div>
    <div id="steps_list" class="sortable">
    </div>
    <a onclick='test_addRow("steps_list")' class="add_another"><img src="/assets/ic_action_new.png"/>Add new step</a>
  </div>

  <div class="recipe_form_field">
    <div class="section_header"><span class="heading_secondary">TAGS</span>
      Type tags, separated by space:
    </div>
    <div id="dashboard">
      <textarea id="holder_tags" placeholder="Tags" onkeypress="check_space(event)"></textarea>
    </div>
    <div style="clear: both;">
    </div>
    <div id="dashboard_tags">
    </div>
  </div>
  <%= f.hidden_field :author_id, :value => current_member.id %>
  <div class="actions">
    <button type="button" onclick="post(this.form)" class="button_round_blue">Submit</button>
    <% if @recipe.id == nil %>
      <%= link_to root_url, data: { confirm: "Are you sure?" } do %>
        <%= button_tag :class=> "button_round_blue" do %>Cancel<% end %>
      <% end %>
      <%= link_to recipes_path do %>
        <%= button_tag :class => "button_round_blue" do %>View Other Recipes<% end %>
      <% end %>
    <% else %>
      <%= link_to @recipe do %>
        <%= button_tag :class => "button_round_blue" do %>Cancel<% end %>
      <% end %>
      <%= link_to @recipe, method: "DELETE", action: "destroy", data: { confirm: "Are you sure? This cannot be undone." } do %>
        <%= button_tag :class=> "button_round_blue" do %>Remove Recipe<% end %>
      <% end %>
    <% end %>

  </div>
<% end %>

<script>
function readURL(input){
  if (input.files && input.files[0]){
    var reader = new FileReader();
    reader.onload = function(e) {
      $(".recipe_test_photo").attr('src', e.target.result);
       
    }
    reader.readAsDataURL(input.files[0]);
  }
}
$("#imgInput").change(function(){
  readURL(this);
});
</script>

<%= javascript_tag do %>
  var id_ingred_list = "ingred_list";
  var id_steps_list = "steps_list";
  <% if @recipe.j_ingreds == "" || @recipe.j_ingreds == nil %>
    var elem = undefined;
    <% 3.times do %>
      elem = addBox(elem, id_ingred_list);
    <% end %>
  <% else %>
    var elem = undefined;
    <% destringify(@recipe.j_ingreds).each do |ingred| %>
      var default_text = "<%= ingred %>";
      default_text = default_text.replace(/U\+022/g, '\"').replace(/U\+2424/g,'&#10;');
      elem = addBox(elem, id_ingred_list, default_text);
    <% end %>
    addBox(elem, id_ingred_list);
  <% end %>
  <% if @recipe.j_ingreds == "" || @recipe.j_ingreds == nil %>
    var elem = undefined;
    <% 3.times do %>
      elem = addBox(elem, id_steps_list);
    <% end %>
  <% else %>
    var elem = undefined;
    <% destringify(@recipe.j_steps).each do |step| %>
      var default_text = "<%= step %>";
      default_text = default_text.replace(/U\+022/g,'\"').replace(/U\+2424/g,'&#10;');
      elem = addBox(elem, id_steps_list, default_text);
    <% end %>
    addBox(elem, id_steps_list);
  <% end %>
    <% tags = destringify(@recipe.s_tags)%>
  <% tags.each do |tag| %>
    init_tags('<%= tag %>');
  <% end %>
<% end %>
<script>
$(function(){
  $(".sortable").sortable();
});
$("textarea").keyup(function(e){
  while($(this).outerHeight() < this.scrollHeight + parseFloat($(this).css("borderTopWidth")) + parseFloat($(this).css("borderBottomWidth"))) {
    $(this).height($(this).height() + 1);
  };
});

function check_space(event){
  var input = document.getElementById("holder_tags");
  var dashboard = document.getElementById("dashboard");
  var chCode = ('charCode' in event)? event.charCode : event.keyCode;
  var chCode = event.keyCode || event.which;
  if (chCode == 32 || chCode == 13){
    var inputValue = input.value;
    if (inputValue.match(/[A-Za-z]/g)){
      var newNode = document.createElement("DIV");
      newNode.id = "picked_tag";
      newNode.innerHTML = '<span>'+inputValue+'</span><button type="button" onclick="delete_from_picked(this)" class="button_round_20">x</button>';
      //remove element from dashboard
      dashboard.insertBefore(newNode, input);//appendChild(newNode);
      //input.value = "";
    }
    input.value = "";
  } else if (chCode == 8 || chCode == 0){
    var tag_array = dashboard.getElementsByTagName("div");
    if (tag_array.length > 0  && input.value == ""){
      var to_delete_node = tag_array[tag_array.length - 1];
      dashboard.removeChild(to_delete_node);
    }
  }
}

</script>
<%= javascript_tag do %>
  var default_tags = <%= raw render(:template => 'tags/index.json', :locals => { :tags => Tag.all}) %>;
<% end %>
<script>

function choose_insert_and_delete(element){
  //var element = event.srcElement;
  var picked = document.getElementById("dashboard");
  var dashboard = document.getElementById("dashboard_tags");
  //add element to picked
  var newNode = document.createElement("DIV");
  newNode.id = "picked_tag";
  newNode.innerHTML = '<span>'+element.getElementsByClassName("tag_title")[0].getElementsByTagName('span')[0].innerHTML+'</span><button type="button" onclick="delete_from_picked(this)">x</button>';
  //remove element from dashboard
  element.style.display = "none";
  picked.insertBefore(newNode, document.getElementById("holder_tags"));//appendChild(newNode);
}


function init_dashboard_tags(id_init_tags){
  var dashboard = document.getElementById(id_init_tags);
  var i = 0;
  var default_tags_object = default_tags["tags"];
  for(var key in default_tags_object){
    if (default_tags_object.hasOwnProperty(key)){
      var newNodeHTML = '<div id="tag_pick" onclick="choose_insert_and_delete(this)"><div class="tag_title"><span>'+default_tags_object[key]+'</span></div></div>';
     dashboard.innerHTML = dashboard.innerHTML + newNodeHTML;
      i+= 1;
    }
  }
}

init_dashboard_tags("dashboard_tags");

</script>

